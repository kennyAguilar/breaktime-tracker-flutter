import 'package:flutter/material.dart';

/// Demo visual para mostrar la adaptabilidad de la app en diferentes tamaños
class ResponsiveDemo extends StatelessWidget {
  const ResponsiveDemo({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'BreakTime Tracker - Demo Responsive',
      theme: ThemeData.dark(),
      home: const ResponsiveDemoPage(),
    );
  }
}

class ResponsiveDemoPage extends StatefulWidget {
  const ResponsiveDemoPage({super.key});

  @override
  State<ResponsiveDemoPage> createState() => _ResponsiveDemoPageState();
}

class _ResponsiveDemoPageState extends State<ResponsiveDemoPage> {
  final List<Size> _demoSizes = [
    const Size(320, 568), // iPhone 5
    const Size(375, 667), // iPhone SE
    const Size(390, 844), // iPhone 12
    const Size(768, 1024), // iPad
    const Size(1024, 768), // Desktop Small
    const Size(1280, 720), // Desktop Medium
    const Size(1920, 1080), // Desktop Large
  ];

  int _currentSizeIndex = 0;

  @override
  Widget build(BuildContext context) {
    final currentSize = _demoSizes[_currentSizeIndex];
    final screenWidth = currentSize.width;
    final isTablet = screenWidth > 600;
    final isMobile = screenWidth < 480;

    return Scaffold(
      backgroundColor: const Color(0xFF1F2937),
      appBar: AppBar(
        backgroundColor: const Color(0xFF374151),
        title: Text(
          'Demo Responsive: ${currentSize.width.toInt()}x${currentSize.height.toInt()}',
          style: const TextStyle(color: Colors.white),
        ),
        actions: [
          IconButton(
            icon: const Icon(Icons.navigate_before, color: Colors.white),
            onPressed: () {
              setState(() {
                _currentSizeIndex =
                    (_currentSizeIndex - 1 + _demoSizes.length) %
                        _demoSizes.length;
              });
            },
          ),
          IconButton(
            icon: const Icon(Icons.navigate_next, color: Colors.white),
            onPressed: () {
              setState(() {
                _currentSizeIndex = (_currentSizeIndex + 1) % _demoSizes.length;
              });
            },
          ),
        ],
      ),
      body: Center(
        child: Container(
          width: currentSize.width,
          height: currentSize.height,
          decoration: BoxDecoration(
            border: Border.all(color: Colors.blue, width: 2),
            borderRadius: BorderRadius.circular(8),
          ),
          child: ClipRRect(
            borderRadius: BorderRadius.circular(6),
            child: _buildDemoContent(isTablet, isMobile),
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () => _showBreakpointInfo(context, currentSize),
        backgroundColor: Colors.blue,
        child: const Icon(Icons.info, color: Colors.white),
      ),
    );
  }

  Widget _buildDemoContent(bool isTablet, bool isMobile) {
    return Scaffold(
      backgroundColor: const Color(0xFF1F2937),
      body: SafeArea(
        child: SingleChildScrollView(
          child: Padding(
            padding: EdgeInsets.symmetric(horizontal: isTablet ? 24 : 16),
            child: Column(
              children: [
                SizedBox(
                    height: isTablet
                        ? 40
                        : isMobile
                            ? 16
                            : 24),

                // Título
                Text(
                  'BreakTime Tracker',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: isTablet
                        ? 32
                        : isMobile
                            ? 24
                            : 28,
                    fontWeight: FontWeight.bold,
                  ),
                ),

                SizedBox(
                    height: isTablet
                        ? 32
                        : isMobile
                            ? 16
                            : 24),

                // Íconos principales
                Container(
                  padding: EdgeInsets.all(isTablet
                      ? 32
                      : isMobile
                          ? 16
                          : 24),
                  decoration: BoxDecoration(
                    color: const Color(0xFF374151),
                    borderRadius: BorderRadius.circular(16),
                  ),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Icon(
                        Icons.credit_card,
                        size: isTablet
                            ? 64
                            : isMobile
                                ? 40
                                : 48,
                        color: Colors.blue,
                      ),
                      SizedBox(width: isTablet ? 24 : 16),
                      Icon(
                        Icons.keyboard,
                        size: isTablet
                            ? 64
                            : isMobile
                                ? 40
                                : 48,
                        color: Colors.green,
                      ),
                    ],
                  ),
                ),

                SizedBox(height: isTablet ? 24 : 16),

                // Campo de entrada
                TextField(
                  decoration: InputDecoration(
                    hintText: 'Escanea tu tarjeta o ingresa código',
                    hintStyle: TextStyle(
                      color: Colors.white60,
                      fontSize: isTablet
                          ? 20
                          : isMobile
                              ? 14
                              : 16,
                    ),
                    filled: true,
                    fillColor: const Color(0xFF4B5563),
                    border: const OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(8)),
                      borderSide: BorderSide.none,
                    ),
                    contentPadding: EdgeInsets.symmetric(
                      horizontal: isTablet ? 24 : 16,
                      vertical: isTablet ? 20 : 16,
                    ),
                  ),
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: isTablet
                        ? 20
                        : isMobile
                            ? 14
                            : 16,
                  ),
                ),

                SizedBox(height: isTablet ? 24 : 16),

                // Lista demo de empleados
                Container(
                  padding: EdgeInsets.all(isTablet ? 20 : 16),
                  decoration: BoxDecoration(
                    color: const Color(0xFF374151),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'Empleados en Descanso',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: isTablet
                              ? 18
                              : isMobile
                                  ? 14
                                  : 16,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      SizedBox(height: isTablet ? 16 : 12),
                      ...List.generate(2, (index) {
                        final names = ['Juan Pérez', 'María García'];
                        return Container(
                          margin: EdgeInsets.only(bottom: isTablet ? 12 : 8),
                          padding: EdgeInsets.all(isTablet ? 16 : 12),
                          decoration: BoxDecoration(
                            color: const Color(0xFF4B5563),
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: Row(
                            children: [
                              CircleAvatar(
                                backgroundColor: Colors.blue,
                                radius: isTablet
                                    ? 28
                                    : isMobile
                                        ? 20
                                        : 24,
                                child: Text(
                                  names[index].substring(0, 1),
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                    fontSize: isTablet
                                        ? 20
                                        : isMobile
                                            ? 14
                                            : 16,
                                  ),
                                ),
                              ),
                              SizedBox(width: isTablet ? 20 : 16),
                              Expanded(
                                child: Text(
                                  names[index],
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: isTablet
                                        ? 16
                                        : isMobile
                                            ? 14
                                            : 15,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        );
                      }),
                    ],
                  ),
                ),

                SizedBox(height: isTablet ? 20 : 16),
              ],
            ),
          ),
        ),
      ),
    );
  }

  void _showBreakpointInfo(BuildContext context, Size size) {
    final width = size.width;
    final isMobile = width < 480;
    final isTablet = width > 600;

    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        backgroundColor: const Color(0xFF374151),
        title: const Text(
          'Información de Breakpoint',
          style: TextStyle(color: Colors.white),
        ),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Resolución: ${width.toInt()}x${size.height.toInt()}',
              style: const TextStyle(color: Colors.white70),
            ),
            const SizedBox(height: 8),
            Text(
              'Tipo: ${isMobile ? "📱 Móvil" : isTablet ? "📱 Tablet" : "💻 Escritorio"}',
              style: const TextStyle(color: Colors.white70),
            ),
            const SizedBox(height: 8),
            Text(
              'isMobile: $isMobile',
              style: const TextStyle(color: Colors.white70),
            ),
            Text(
              'isTablet: $isTablet',
              style: const TextStyle(color: Colors.white70),
            ),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text('OK', style: TextStyle(color: Colors.blue)),
          ),
        ],
      ),
    );
  }
}

void main() {
  runApp(const ResponsiveDemo());
}
